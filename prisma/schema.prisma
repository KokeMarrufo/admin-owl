generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  customers     Customer[]
  invoices      Invoice[]
}

model Customer {
  id        String    @id @default(cuid())
  name      String
  email     String
  phone     String?
  address   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  invoices  Invoice[]
}

model Invoice {
  id         String    @id @default(cuid())
  number     String
  date       DateTime
  dueDate    DateTime
  status     String    @default("draft") // draft, sent, paid, overdue
  total      Float
  customerId String
  customer   Customer  @relation(fields: [customerId], references: [id])
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  items      InvoiceItem[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model InvoiceItem {
  id          String  @id @default(cuid())
  description String
  quantity    Int
  unitPrice   Float
  total       Float
  invoiceId   String
  invoice     Invoice @relation(fields: [invoiceId], references: [id])
}
